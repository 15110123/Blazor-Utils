@page "/iso"

<LMTInjector ref="@injector" jsonpath="/json/Injection.json" type="Models.WebsiteInfo">
    <LMTTry>
        <h1>The website name is @(injector.Get("websiteName"))</h1>
        <h1>It has been here for @injector.Get("age") years!</h1>
        <h1>This website is developing by: </h1>
        @{
            foreach (var devname in injector.Get<Models.WebsiteInfo>().developers)
            {
                <h2>@devname</h2>
            }
            foreach (var devname in injector.Get().developers)
            {
                <h2>@devname</h2>
            }
        }
        <button onclick="@(() => { this.StateHasChanged(); })">ReRender!</button>
        <button onclick="@(async () => { await injector.Update(); })">Update data!</button>
    </LMTTry>
</LMTInjector>

<h1>Fallback test</h1>

<LMTInjector ref="@failInjector" jsonpath="@_wrongUrl" type="Models.WebsiteInfo">
    <LMTTry>
        <h1>The website name is @(failInjector.Get("websiteName"))</h1>
        <h1>It has been here for @failInjector.Get("age") years!</h1>
        <h1>This website is developing by: </h1>
        @{
            foreach (var devname in failInjector.Get<Models.WebsiteInfo>().developers)
            {
                <h2>@devname</h2>
            }
            foreach (var devname in failInjector.Get().developers)
            {
                <h2>@devname</h2>
            }
        }
    </LMTTry>
    <LMTCatch>
        <h1>Fail to get data. Please check back later!</h1>
        <button onclick="@(() => { _wrongUrl = "/json/Injection.json"; })">Change url to /json/Injection.json</button>
        <button onclick="@(async () => { StateHasChanged(); await failInjector.Update(); })">Update</button>
    </LMTCatch>
</LMTInjector>

@functions
{
    private LMTInjector<Models.WebsiteInfo> injector;
    private LMTInjector<Models.WebsiteInfo> failInjector;
    private string _wrongUrl = "/json/Injecti.json";
}