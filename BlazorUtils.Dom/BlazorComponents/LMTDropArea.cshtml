@using BlazorUtils.Interfaces.EventArgs
@implements ILMTComponent

<div class="@(@class)" style="@style" id="@id">
    @ChildContent
</div>

@functions
{
    [Parameter]
    private string style { get; set; }

    [Parameter]
    private string @class { get; set; }

    [Parameter]
    private string id { get; set; } = Guid.NewGuid().ToString();

    [Parameter]
    private RenderFragment ChildContent { get; set; }

    /// <summary>
    /// The eventargs will be called PreventDefault by library.
    /// </summary>
    [Parameter]
    private LMTEventHandlers.LMTEventHandler<LMTDropEventArgs> ondrop { get; set; } = null;

    [Parameter]
    private LMTEventHandlers.LMTEventHandler<LMTEventArgs> ondragover { get; set; } = null;

    private bool _isSetDrop = false;

    protected override void OnInit()
    {
    }

    protected override void OnAfterRender()
    {
        if (_isSetDrop) return;
        _isSetDrop = true;

        _($"#{id}")
            .On("dragover", (e) =>
            {
                if (ondragover == null) return;
                ondragover(e);
            })
            .On("drop", (e) =>
            {
                OnDropHandler(e);
            });
    }

    private void OnDropHandler(LMTEventArgs e)
    {
        if (ondrop == null || !(e is LMTDropEventArgs eConverted)) return;

        ondrop(eConverted);
    }
}
